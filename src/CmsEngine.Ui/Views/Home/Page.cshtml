@model InstanceViewModel

@{
    var selectedDocument = Model.SelectedDocument;
    Guard.Against.Null(selectedDocument, nameof(selectedDocument), "Page not found");

    var selectedPage = (PageViewModel)selectedDocument;
    string imagePath = !string.IsNullOrWhiteSpace(selectedPage.HeaderImage)
                       ? string.Format(Main.ImagePath.Default, "page", selectedPage.HeaderImage)
                       : "/img/no-image.png";
}

@section FacebookMeta {
    <meta property="og:url" content="@string.Format("{0}://{1}{2}", Context.Request.Scheme, Context.Request.Host, Context.Request.Path)" />
    <meta property="og:type" content="article" />
    <meta property="og:title" content="@Model.PageTitle" />
    <meta property="og:description" content="@selectedPage.Description" />
    <meta property="og:image" content="@string.Format("{0}://{1}{2}", Context.Request.Scheme, Context.Request.Host, imagePath)" />
}

@section TwitterMeta {
    <meta name="twitter:card" content="summary_large_image">
}

<div class="container">
    <div class="row">
        <!-- Latest Posts -->
        <main class="post blog-post col-lg-8">
            <div class="container">
                <div class="post-single">
                    <div class="post-thumbnail">
                        <img src="@imagePath" alt="@selectedPage.Title" title="@selectedPage.Title" class="img-fluid">
                    </div>
                    <div class="post-details">
                        <h1>@selectedPage.Title</h1>
                        <div class="post-footer d-flex align-items-center flex-column flex-sm-row">
                            @await Html.PartialAsync("_Author", selectedPage.Author)
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="date meta-last"><i class="icon-clock"></i> @selectedPage.PublishedOn</div>
                            </div>
                        </div>
                        <div class="post-body">
                            <p class="lead">@selectedPage.Description</p>
                            @Html.Raw(selectedPage.DocumentContent)
                        </div>
                    </div>
                </div>
            </div>
        </main>
        @await Html.PartialAsync("_Sidebar", Model)
    </div>
</div>
