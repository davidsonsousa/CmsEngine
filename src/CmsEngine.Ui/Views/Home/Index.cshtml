@model InstanceViewModel

@{
    string headerImagePath = !string.IsNullOrWhiteSpace(Model.HeaderImage)
                             ? string.Format(Main.ImagePath.Path640, "website", Model.HeaderImage)
                             : "/media/img/no-image.png";

}

@section FacebookMeta {
    <meta property="og:url" content="@string.Format("{0}://{1}", Context.Request.Scheme, Context.Request.Host)" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="@Model.PageTitle" />
    <meta property="og:description" content="@Model.Tagline" />
    <meta property="og:image" content="@string.Format("{0}://{1}{2}", Context.Request.Scheme, Context.Request.Host, headerImagePath)" />
}

@section TwitterMeta {
    <meta name="twitter:card" content="summary_large_image">
}

<!-- Hero Section-->
<section style="background: url(@string.Format(Main.ImagePath.Default, "website", Model.HeaderImage)); background-size: cover; background-position: center center" class="hero">
    <div class="container">
        <div class="row">
            <div class="col-lg-7">
                <h1>
                    @Model.PageTitle
                </h1>
                <p class="lead">@Model.Tagline</p>
                @*<a href="#" class="hero-link">Discover More</a>*@
            </div>
        </div><a href=".intro" class="continue link-scroll"><i class="fa fa-long-arrow-down"></i> Scroll Down</a>
    </div>
</section>
<!-- Intro Section-->
<section class="intro">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <h2 class="h3">Who am I?</h2>
                <div class="text-big">@Html.Raw(Model.Description)</div>
            </div>
        </div>
    </div>
</section>
<section class="featured-posts no-padding-top">
    <div class="container">
        @for (int i = 0; i < Model.LatestPosts.Count(); i++)
        {
            var latestPost = Model.LatestPosts.ElementAt(i);
            <div class="row d-flex align-items-stretch">
                @await Html.PartialAsync("_PostIndex", latestPost)
            </div>
        }
    </div>
</section>
